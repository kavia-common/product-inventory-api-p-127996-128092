{"is_source_file": true, "format": "Python", "description": "This is the main entry point for a FastAPI-based backend API service, configuring app settings, middleware, logging, database initialization, and routing for various modules such as auth, users, products, categories, and others.", "external_files": ["./core/config.py", "./core/db.py", "./core/security.py", "./middlewares/rate_limit.py", "./routers/auth.py", "./routers/users.py", "./routers/products.py", "./routers/categories.py", "./routers/locations.py", "./routers/inventory.py", "./routers/costs.py", "./routers/reporting.py", "./routers/webhooks.py"], "external_methods": ["get_settings", "init_db", "get_current_user_optional"], "published": ["health_check", "health", "ws_docs", "view_config"], "classes": [], "methods": [{"name": "health_check()", "description": "Public endpoint for a simple health check, returning status, service name, and version.", "scope": "", "scopeKind": ""}, {"name": "health()", "description": "Provides detailed health status of the service.", "scope": "", "scopeKind": ""}, {"name": "ws_docs()", "description": "Exposes WebSocket documentation or information, currently indicating none are available.", "scope": "", "scopeKind": ""}, {"name": "add_security_headers(request: Request, call_next)", "description": "Middleware to add security-related HTTP headers to responses.", "scope": "", "scopeKind": ""}, {"name": "unhandled_exception_handler(request: Request, exc: Exception)", "description": "Exception handler to catch unhandled exceptions and log them, returning a 500 error.", "scope": "", "scopeKind": ""}, {"name": "view_config(_: dict = Depends(get_current_user_optional), s=Depends(get_settings))", "description": "Development utility endpoint to view loaded server configuration with masking for sensitive info.", "scope": "", "scopeKind": ""}], "calls": ["logging.basicConfig", "logger.getLogger", "app.add_middleware", "init_db", "app.include_router", "app.get", "app.middleware", "app.exception_handler"], "search-terms": ["FastAPI", "product-inventory", "webhooks", "rate_limit", "health_check", "main.py", "app", "routers", "middleware", "configuration"], "state": 2, "file_id": 1, "knowledge_revision": 88, "git_revision": "8cf2a6a34a30e8d93f07640e79d26d81868148dc", "revision_history": [{"9": "f60c02f6e52b50dc6f6b92eaf010c29faf8e233d"}, {"10": "f60c02f6e52b50dc6f6b92eaf010c29faf8e233d"}, {"77": "8cf2a6a34a30e8d93f07640e79d26d81868148dc"}, {"88": "8cf2a6a34a30e8d93f07640e79d26d81868148dc"}], "ctags": [{"_type": "tag", "name": "add_security_headers", "path": "/home/kavia/workspace/code-generation/product-inventory-api-p-127996-128092/ProductInventoryAPIMonolithicContainer/src/api/main.py", "pattern": "/^async def add_security_headers(request: Request, call_next):$/", "language": "Python", "kind": "function", "signature": "(request: Request, call_next)"}, {"_type": "tag", "name": "app", "path": "/home/kavia/workspace/code-generation/product-inventory-api-p-127996-128092/ProductInventoryAPIMonolithicContainer/src/api/main.py", "pattern": "/^app = FastAPI($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "health", "path": "/home/kavia/workspace/code-generation/product-inventory-api-p-127996-128092/ProductInventoryAPIMonolithicContainer/src/api/main.py", "pattern": "/^def health():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "health_check", "path": "/home/kavia/workspace/code-generation/product-inventory-api-p-127996-128092/ProductInventoryAPIMonolithicContainer/src/api/main.py", "pattern": "/^def health_check():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "logger", "path": "/home/kavia/workspace/code-generation/product-inventory-api-p-127996-128092/ProductInventoryAPIMonolithicContainer/src/api/main.py", "pattern": "/^logger = logging.getLogger(\"product-inventory-api\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "settings", "path": "/home/kavia/workspace/code-generation/product-inventory-api-p-127996-128092/ProductInventoryAPIMonolithicContainer/src/api/main.py", "pattern": "/^settings = get_settings()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "unhandled_exception_handler", "path": "/home/kavia/workspace/code-generation/product-inventory-api-p-127996-128092/ProductInventoryAPIMonolithicContainer/src/api/main.py", "pattern": "/^async def unhandled_exception_handler(request: Request, exc: Exception):$/", "language": "Python", "kind": "function", "signature": "(request: Request, exc: Exception)"}, {"_type": "tag", "name": "view_config", "path": "/home/kavia/workspace/code-generation/product-inventory-api-p-127996-128092/ProductInventoryAPIMonolithicContainer/src/api/main.py", "pattern": "/^def view_config(_: dict = Depends(get_current_user_optional), s=Depends(get_settings)):$/", "language": "Python", "kind": "function", "signature": "(_: dict = Depends(get_current_user_optional), s=Depends(get_settings))"}, {"_type": "tag", "name": "ws_docs", "path": "/home/kavia/workspace/code-generation/product-inventory-api-p-127996-128092/ProductInventoryAPIMonolithicContainer/src/api/main.py", "pattern": "/^def ws_docs():$/", "language": "Python", "kind": "function", "signature": "()"}], "hash": "d1e663ea654e182f99a1f63705c81e9d", "format-version": 4, "code-base-name": "ProductInventoryAPIMonolithicContainer", "filename": "ProductInventoryAPIMonolithicContainer/src/api/main.py", "fields": [{"name": "app = FastAPI(", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "logger = logging.getLogger(\"product-inventory-api\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "settings = get_settings()", "scope": "", "scopeKind": "", "description": "unavailable"}]}