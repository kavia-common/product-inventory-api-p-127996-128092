{"is_source_file": true, "format": "Python", "description": "This file defines API routes for managing 'location' entities in a FastAPI application, including create, list, update, and delete operations with role-based access control.", "external_files": ["../core/db", "../core/security", "../models/location", "../schemas/location"], "external_methods": ["get_db", "require_roles", "Location", "LocationCreate", "LocationUpdate", "LocationOut"], "published": [], "classes": [], "methods": [{"name": "create_location(payload: LocationCreate, db: Session = Depends(get_db))", "description": "Creates a new location entry after checking for duplicate codes, requires 'admin' or 'manager' roles.", "scope": "", "scopeKind": ""}, {"name": "list_locations(db: Session = Depends(get_db))", "description": "Retrieves a list of all locations, accessible to 'admin', 'manager', and 'viewer' roles.", "scope": "", "scopeKind": ""}, {"name": "update_location(location_id: int, payload: LocationUpdate, db: Session = Depends(get_db))", "description": "Updates an existing location by ID, requires 'admin' or 'manager' roles.", "scope": "", "scopeKind": ""}, {"name": "delete_location(location_id: int, db: Session = Depends(get_db))", "description": "Deletes a location by ID, requires 'admin' role.", "scope": "", "scopeKind": ""}], "calls": ["db.query(Location).filter(Location.code == payload.code).first()", "db.add(loc)", "db.commit()", "db.refresh(loc)", "db.query(Location).order_by(Location.id.desc()).all()", "db.get(Location, location_id)", "setattr(loc, k, v)", "db.delete(loc)"], "search-terms": ["API router", "location management", "FastAPI location endpoints", "role-based access control", "CRUD location"], "state": 2, "file_id": 29, "knowledge_revision": 65, "git_revision": "", "ctags": [{"_type": "tag", "name": "create_location", "path": "/home/kavia/workspace/code-generation/product-inventory-api-p-127996-128092/ProductInventoryAPIMonolithicContainer/src/api/routers/locations.py", "pattern": "/^def create_location(payload: LocationCreate, db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(payload: LocationCreate, db: Session = Depends(get_db))"}, {"_type": "tag", "name": "delete_location", "path": "/home/kavia/workspace/code-generation/product-inventory-api-p-127996-128092/ProductInventoryAPIMonolithicContainer/src/api/routers/locations.py", "pattern": "/^def delete_location(location_id: int, db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(location_id: int, db: Session = Depends(get_db))"}, {"_type": "tag", "name": "list_locations", "path": "/home/kavia/workspace/code-generation/product-inventory-api-p-127996-128092/ProductInventoryAPIMonolithicContainer/src/api/routers/locations.py", "pattern": "/^def list_locations(db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(db: Session = Depends(get_db))"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/product-inventory-api-p-127996-128092/ProductInventoryAPIMonolithicContainer/src/api/routers/locations.py", "pattern": "/^router = APIRouter()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "update_location", "path": "/home/kavia/workspace/code-generation/product-inventory-api-p-127996-128092/ProductInventoryAPIMonolithicContainer/src/api/routers/locations.py", "pattern": "/^def update_location(location_id: int, payload: LocationUpdate, db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(location_id: int, payload: LocationUpdate, db: Session = Depends(get_db))"}], "hash": "3548f232fd23ab7600fdc21b95f0c12b", "format-version": 4, "code-base-name": "ProductInventoryAPIMonolithicContainer", "filename": "ProductInventoryAPIMonolithicContainer/src/api/routers/locations.py", "fields": [{"name": "router = APIRouter()", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"65": ""}]}